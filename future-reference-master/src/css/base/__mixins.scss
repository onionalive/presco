// inline-block list
@mixin inline-block-list($padding: false) {
	margin: 0;
  	padding: 0;
  	border: 0;
  	@include clearfix;

  	li {
  		list-style-type: none;
  		@include inline-block();
  		white-space: nowrap;
  		@if $padding {
    		padding: {
      			left: $padding;
      			right: $padding;
    		};
  		}
  	}
}

@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  &:nth-child(#{$nth}+1) { clear: none }
}

// ASPECT RATIO

// ASPECT RATIO MIXIN

@mixin aspect-ratio($width, $height) {
 position: relative;
 &:before {
	 display: block;
	 content: "";
	 width: 100%;
	 padding-top: ($height / $width) * 100%;

	 @include grid-media($small-tablet) {
		 width: 205px;
	 }

	 @media only screen and (max-width: 660px) {
		 width: 175px;
	 }

	 @include grid-media($mobile) {
		 width: 137px;
	 }
 }
 > .aspect-content {
	 display: flex;
	 justify-content: center;
	 align-items: center;

	 position: absolute;
	 top: 0;
	 left: 0;
	 right: 0;
	 bottom: 0;

	 h3 {
		 text-align: center;
		 color: $c-white;
		 font-size: 2.7rem;
		 line-height: 3.2rem;
		 letter-spacing: -0.8px;
		 margin: 25px;
		 text-shadow: 1px 1px 20px rgba(0,0,0,.6);

		 @include grid-media($small-tablet) {
			 font-size: 2.5rem;
			 letter-spacing: -1.2px;
			 line-height: 3rem;
			}
		}
	}
}

// ASPECT RATIO CLASSES

.aspect-ratio  {
	background-size: cover;
	background-position: center;
}

.sixteen-nine {
 @include aspect-ratio(16, 9);
}

.four-three {
 @include aspect-ratio(4, 3);
}

.one-one {
 @include aspect-ratio(1, 1);
}

// inline-block for old browsers
@mixin inline-block() {
  display: inline-block;
	*zoom: 1;
  *display: inline;
}

@mixin reset-box-model {
	margin: 0;
	padding: 0;
	border: 0;
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin headings($from: 1, $to: 6){
  @for $i from $from through $to{
    h#{$i}{
     @content
    }
  }
}

@mixin background-image($path) {
  background-image: url(../img/#{$path}.png);
  background-image: linear-gradient(transparent, transparent), url(../img/#{$path}.svg);
}

/* Reset unordered list style */
@mixin reset-ul {
	list-style-type: none;
	margin: 0;
	padding: 0;
	overflow: auto;
}

@mixin hide-text {
  overflow: hidden;
  text-indent: 101%;
  white-space: nowrap;
}


	// swaps neat 2.0 to desktop first
	@function _neat-parse-media($media) {
	  @if type-of($media) == number {
	    @return "only screen and (max-width: #{$media})";
	  } @else if type-of($media) == string {
	    @return "#{$media}";
	  }
	}
